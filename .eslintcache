[{"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\index.tsx":"1","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\routing.jsx":"2","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\client.js":"3","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration.tsx":"4","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\LobbyContentRouter.tsx":"5","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\organisations.tsx":"6","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childContext.ts":"7","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\checkToken.ts":"8","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\getToken.ts":"9","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\login-inputs.tsx":"10","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration-inputs.tsx":"11","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherLobbyContentRouter.tsx":"12","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childLobbyContentRouter.tsx":"13","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Buttons.tsx":"14","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\orgCard.tsx":"15","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\generated\\graphql.tsx":"16","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\wirteToken.ts":"17","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\MUTATIONS\\registerUser.ts":"18","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\MUTATIONS\\getToken.ts":"19","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Inputs.tsx":"20","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childSubjectWidget.tsx":"21","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherClasses.tsx":"22","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getTeacherSubjects.ts":"23","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Cards.tsx":"24","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\subjectDetail.tsx":"25","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\teacherClassCard.tsx":"26","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getLessonInfo.ts":"27","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\lessonDetails.tsx":"28","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\lessonWidget.tsx":"29","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\createMaterial.tsx":"30","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\editor.jsx":"31","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\toggleButton.tsx":"32","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\testCreation.tsx":"33","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Calendar.jsx":"34","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\timestamp.jsx":"35","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherWorkCreate.tsx":"36","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\testCompletion.tsx":"37","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\pagination.tsx":"38","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\truePagination.tsx":"39","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherCheckWorks.tsx":"40","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\FileInput.jsx":"41","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\ButtonGroup.tsx":"42","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\audioRec.js":"43","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\audioRecButton.jsx":"44","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\audio.tsx":"45","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\mark.tsx":"46","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\TaskType.tsx":"47","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\TrueFalseQuestion.tsx":"48","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\backLink.tsx":"49"},{"size":249,"mtime":1612479568311,"results":"50","hashOfConfig":"51"},{"size":1053,"mtime":1612653503155,"results":"52","hashOfConfig":"51"},{"size":474,"mtime":1612475612240,"results":"53","hashOfConfig":"51"},{"size":2996,"mtime":1612602173233,"results":"54","hashOfConfig":"51"},{"size":3015,"mtime":1614339789037,"results":"55","hashOfConfig":"51"},{"size":2095,"mtime":1612602200909,"results":"56","hashOfConfig":"51"},{"size":158,"mtime":1612440111816,"results":"57","hashOfConfig":"51"},{"size":85,"mtime":1611771070488,"results":"58","hashOfConfig":"51"},{"size":76,"mtime":1611839004045,"results":"59","hashOfConfig":"51"},{"size":1363,"mtime":1612604531792,"results":"60","hashOfConfig":"51"},{"size":1469,"mtime":1612602763649,"results":"61","hashOfConfig":"51"},{"size":3795,"mtime":1612996003700,"results":"62","hashOfConfig":"51"},{"size":999,"mtime":1612614236023,"results":"63","hashOfConfig":"51"},{"size":1137,"mtime":1612423967061,"results":"64","hashOfConfig":"51"},{"size":1041,"mtime":1612001486457,"results":"65","hashOfConfig":"51"},{"size":113476,"mtime":1614280939559,"results":"66","hashOfConfig":"51"},{"size":162,"mtime":1611771070488,"results":"67","hashOfConfig":"51"},{"size":217,"mtime":1611771070489,"results":"68","hashOfConfig":"51"},{"size":198,"mtime":1611771070489,"results":"69","hashOfConfig":"51"},{"size":675,"mtime":1612450429638,"results":"70","hashOfConfig":"51"},{"size":2360,"mtime":1614336917963,"results":"71","hashOfConfig":"51"},{"size":1982,"mtime":1614336660754,"results":"72","hashOfConfig":"51"},{"size":370,"mtime":1612125431591,"results":"73","hashOfConfig":"51"},{"size":6078,"mtime":1611971375175,"results":"74","hashOfConfig":"51"},{"size":2949,"mtime":1614337456945,"results":"75","hashOfConfig":"51"},{"size":1262,"mtime":1614341764072,"results":"76","hashOfConfig":"51"},{"size":333,"mtime":1612089889087,"results":"77","hashOfConfig":"51"},{"size":12738,"mtime":1614339351038,"results":"78","hashOfConfig":"51"},{"size":1816,"mtime":1614341727718,"results":"79","hashOfConfig":"51"},{"size":5286,"mtime":1612475898408,"results":"80","hashOfConfig":"51"},{"size":1539,"mtime":1612737200874,"results":"81","hashOfConfig":"51"},{"size":1909,"mtime":1612432218161,"results":"82","hashOfConfig":"51"},{"size":18699,"mtime":1614337967033,"results":"83","hashOfConfig":"51"},{"size":2632,"mtime":1612518518090,"results":"84","hashOfConfig":"51"},{"size":3511,"mtime":1612517912177,"results":"85","hashOfConfig":"51"},{"size":857,"mtime":1612637417436,"results":"86","hashOfConfig":"51"},{"size":10486,"mtime":1614334986058,"results":"87","hashOfConfig":"51"},{"size":2214,"mtime":1611700026034,"results":"88","hashOfConfig":"51"},{"size":1655,"mtime":1614341854086,"results":"89","hashOfConfig":"51"},{"size":11302,"mtime":1614339071053,"results":"90","hashOfConfig":"51"},{"size":210,"mtime":1613400340098,"results":"91","hashOfConfig":"51"},{"size":1833,"mtime":1614332151039,"results":"92","hashOfConfig":"51"},{"size":2005,"mtime":1613670806366,"results":"93","hashOfConfig":"51"},{"size":1508,"mtime":1613762095360,"results":"94","hashOfConfig":"51"},{"size":255,"mtime":1613757397334,"results":"95","hashOfConfig":"51"},{"size":1292,"mtime":1614327711030,"results":"96","hashOfConfig":"51"},{"size":1650,"mtime":1613779506366,"results":"97","hashOfConfig":"51"},{"size":1625,"mtime":1614276123041,"results":"98","hashOfConfig":"51"},{"size":269,"mtime":1614338401710,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},"12khao8",{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"103"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"103"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"103"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"103"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"103"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"103"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"103"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"159","usedDeprecatedRules":"103"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"103"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"107"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"103"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"103"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"103"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"107"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"107"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"103"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"103"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"103"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\index.tsx",["222","223"],"import react from \"react\";\r\n\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport {Card} from \"./uiKit/TestCardHW\"\r\n\r\nimport {Routing} from \"./screens/content/routing.jsx\"\r\n\r\nReactDom.render(\r\n    <Routing></Routing>,\r\n    document.getElementById(\"root\")\r\n)",["224","225"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\routing.jsx",["226","227","228"],"import React from \"react\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\"\r\nimport {\r\n    ApolloProvider\r\n} from \"@apollo/client\"\r\nimport client from \"../../client\"\r\n\r\nimport {Registration} from \"./registration\"\r\n\r\nimport {OrganisationList} from \"./organisations\";\r\n\r\nimport {ChildLobby} from \"./LobbyContentRouter\";\r\n\r\nimport {checkToken} from \"../../LocalStorageInteraction/checkToken\"\r\n\r\nimport {TestCompletion} from \"./testCompletion\"\r\n\r\nexport const Routing = () => {\r\n\r\n    return <ApolloProvider client={client}>\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/enter-user\">\r\n                    <Registration></Registration>\r\n                </Route>\r\n                <Route path=\"/test/:id\">\r\n                    <TestCompletion></TestCompletion>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <OrganisationList></OrganisationList>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    </ApolloProvider>\r\n;\r\n}",["229","230"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\client.js",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration.tsx",["231","232","233","234","235"],"import react from \"react\";\r\n\r\nimport \"../css/registration.css\";\r\n\r\nimport {DefaultButton} from \"../../uiKit/Buttons\";\r\n\r\nimport {DefaultInput} from \"../../uiKit/Inputs\";\r\n\r\nimport vkImg from \"../svg/VkImage.svg\";\r\nimport googleImg from \"../svg/googleImg.svg\";\r\n\r\nimport {Login_inputs} from \"./login-inputs\";\r\nimport {Registration_inputs} from \"./registration-inputs\";\r\n\r\nimport {checkToken} from \"../../LocalStorageInteraction/checkToken\"\r\n\r\nimport {\r\n    Link, Switch, Route, useRouteMatch, useLocation, Redirect\r\n} from \"react-router-dom\";\r\n\r\nexport const Registration:react.FC = () => {\r\n    const {path, url} = useRouteMatch();\r\n    const location = useLocation();\r\n    console.log(location);\r\n    const isSign = location.pathname.split(\"/\").pop() == \"Login\";\r\n    if (checkToken()) return <Redirect to=\"\"></Redirect>\r\n    return (\r\n    <div className=\"centered\">\r\n        <div className=\"registration__container\">\r\n            <div className=\"heading-evgen-app\">Добро пожаловать в EvgenApp</div>\r\n            <div className=\"toggle__reg\">\r\n                <Link to=\"/enter-user/Login\">                \r\n                    <div className={\"toggle-text \" + (isSign ? \"\" : \"disabled\")}>Вход</div>\r\n                </Link>\r\n                <Link to=\"/enter-user/Registration\">\r\n                    <div className={\"toggle-text \" + (isSign ? \"disabled\": \"\")}>Регистрация</div>\r\n                </Link>\r\n            </div>\r\n            <Switch>\r\n                <Route path={`${url}/Login`}>\r\n                    <Login_inputs></Login_inputs>\r\n                </Route>\r\n                <Route path={`${url}/Registration`}>\r\n                    <Registration_inputs></Registration_inputs>\r\n                </Route>\r\n            </Switch>\r\n            <div className=\"or-container\">\r\n                <div className=\"line\"></div>\r\n                <div className=\"or-content\">или</div>\r\n                <div className=\"line\"></div>\r\n            </div>\r\n            <DefaultButton handleClick={()=>{}} class=\"reg-btn vk-btn\">\r\n                <div className=\"vk-button\">\r\n                    <img src={vkImg} alt=\"\" className=\"vk-button__img\"/>\r\n                    <span className=\"vk-button__text\">\r\n                        <span>\r\n                        Войти с помощью VK\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            </DefaultButton>\r\n            <DefaultButton handleClick={()=>{}} class=\"reg-btn google-btn\">\r\n                <div className=\"vk-button\">\r\n                        <img src={googleImg} alt=\"\" className=\"vk-button__img\"/>\r\n                        <span className=\"vk-button__text\">\r\n                            <span className=\"google-text-color\">\r\n                            Войти с помощью Google\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n            </DefaultButton>\r\n        </div>\r\n    </div>\r\n    );\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\LobbyContentRouter.tsx",["236","237","238"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\organisations.tsx",["239","240","241","242","243"],"import react from \"react\"\r\n\r\nimport {OrgCard} from \"../../uiKit/orgCard\";\r\n\r\nimport \"../css/org-list.css\"\r\n\r\nimport {useQuery} from \"@apollo/client\";\r\nimport {getUserOrg} from \"../../QUERIES/getOrg\"\r\n\r\nimport {getToken} from \"../../LocalStorageInteraction/getToken\";\r\n\r\nimport {IEDataProcessing} from \"./interfaces\"\r\n\r\nimport {\r\n    Route, Switch, Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport {checkToken} from \"../../LocalStorageInteraction/checkToken\";\r\n\r\nimport {\r\n    LobbyContentRouter\r\n} from \"./LobbyContentRouter\";\r\n\r\nimport {useUserInfoQuery} from \"../../generated/graphql\";\r\n\r\nfunction Processing(arrayProcessed:any, role:string) {\r\n    let result = []\r\n    let links = []\r\n    for (const childProfile of arrayProcessed){\r\n        result.push(<OrgCard\r\n            subjects={childProfile.node.org.subjects}\r\n            name={childProfile.node.org.name}\r\n            childLen={childProfile.node.org.childrenLength}\r\n            classesLen={childProfile.node.org.classesLength}\r\n            role={role}\r\n            id={childProfile.node.id}\r\n        ></OrgCard>);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const OrganisationList:react.FC = () =>{\r\n    const {loading, error, data} = useUserInfoQuery({variables: {id: getToken()!}})\r\n    if (loading) return <div>loading...</div>\r\n    console.log(data)\r\n    if (!checkToken()) {\r\n        return <Redirect to=\"/enter-user/Registration\"></Redirect>\r\n    }\r\n    return <Switch>\r\n        <Route path=\"/:id/:type/\">\r\n            <LobbyContentRouter></LobbyContentRouter>\r\n        </Route>\r\n        <Route path=\"/\">\r\n            <div className=\"centered\">\r\n                <div className=\"org-list__public\">\r\n                    <div className=\"heading\">Мои организации</div>\r\n                    <div className=\"org-list__container\">\r\n                        {Processing(data?.userInfo?.profile?.childSet.edges, \"child\")}\r\n                        {Processing(data?.userInfo?.profile?.teacherSet.edges, \"teacher\")}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Route>\r\n\r\n    </Switch>\r\n\r\n\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childContext.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\checkToken.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\getToken.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\login-inputs.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration-inputs.tsx",["244"],"import React from \"react\"\r\nimport { DefaultButton } from \"../../uiKit/Buttons\"\r\nimport { DefaultInput } from \"../../uiKit/Inputs\"\r\n\r\nimport \"../css/inputs.css\"\r\n\r\nimport {useMutation} from \"@apollo/client\";\r\nimport {register} from \"../../MUTATIONS/registerUser\"\r\n\r\nimport {IEvent} from \"./interfaces\"\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nexport const Registration_inputs:React.FC = () => {\r\n    const history = useHistory();\r\n    const [registerUser, {data}] = useMutation(register, {onCompleted: \r\n        (data) => {\r\n            console.log(data);\r\n        } });\r\n    let name_input:string, password_input:string;\r\n    return <div className=\"inputs_flex\">\r\n        <DefaultInput handleChange={(e:IEvent) => {\r\n            name_input = e.target.value;\r\n        }} \r\n        class=\"reg-input\" placeHolder=\"ФИО\"></DefaultInput>\r\n        <DefaultInput handleChange={(e:IEvent) => {\r\n        }} class=\"reg-input\" placeHolder=\"E-mail\"></DefaultInput>\r\n        <DefaultInput handleChange={(e:IEvent) => {\r\n            password_input = e.target.value;\r\n        }} class=\"reg-input\" placeHolder=\"Password\"></DefaultInput>\r\n        \r\n        \r\n        <DefaultButton handleClick={()=>{\r\n            registerUser({variables:{username:name_input, \r\n                password:password_input}});\r\n            history.push(\"/enter-user/Login\")\r\n        }} class=\"reg-btn\">\r\n            Зарегистрироваться\r\n        </DefaultButton>\r\n    </div>\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherLobbyContentRouter.tsx",["245"],"import react, {useContext} from \"react\";\r\n\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport {ChildContext} from \"./childContext\";\r\n\r\nimport {TeacherClasses} from \"./teacherClasses\";\r\n\r\nimport {TeacherWorkCreate} from \"./teacherWorkCreate\";\r\n\r\nimport {Switch, Route, useRouteMatch, Link} from \"react-router-dom\";\r\n\r\nimport \"../css/teacherLobbyContentRouter.css\"\r\nimport {\r\n    GetTeacherClassesQuery,\r\n    GetTeacherClassesQueryResult, useGetTeacherClassesQuery\r\n} from \"../../generated/graphql\"\r\nimport {TeacherWorkCheck} from \"./teacherCheckWorks\"\r\n\r\ninterface IEParams{\r\n    type:string;\r\n}\r\n\r\ninterface IECreateWorkLink{\r\n    link:string;\r\n}\r\n\r\ninterface IECreateLessonWidget{\r\n    groupName:string;\r\n    subjectName:string;\r\n    childLen:number;\r\n    tasksLen:number;\r\n}\r\n\r\nconst CreateLessonWidget:react.FC<IECreateLessonWidget> = (props) => {\r\n    return <div className=\"create-widget__container\">\r\n        <div className=\"create-widget__main-flex\">\r\n            <div className=\"create-widget__heading\">\r\n                {props.groupName}\r\n            </div>\r\n            <div className=\"create-widget__subject-type\">\r\n                {props.subjectName}\r\n            </div>\r\n            <div className=\"children-length\">\r\n                Учеников:&nbsp;<span className=\"colorize\">{props.childLen}</span>\r\n            </div>\r\n        </div>\r\n        <div className=\"create-widget__add-flex\">\r\n            <div className=\"tasks-length\">\r\n                Заданий: <span className=\"colorize\">{props.tasksLen}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nfunction ParseData(data:GetTeacherClassesQuery){\r\n    let {url} = useRouteMatch()\r\n    let res = []\r\n    for (let node of data.teacher?.subjectclasslocalSet?.edges!){\r\n        res.push( <Link to={`${url}/${node?.node?.id}`}>\r\n                    <CreateLessonWidget\r\n            subjectName={node?.node?.name!}\r\n            tasksLen={node?.node?.lessonsLen!}\r\n            childLen={node?.node?.group.childrenLen!}\r\n            groupName={node?.node?.group.name!}\r\n        ></CreateLessonWidget>\r\n        </Link>\r\n)\r\n    }\r\n    return res;\r\n}\r\n\r\nconst CreateLessonSelection:react.FC = (props) => {\r\n    const {id} = useContext(ChildContext);\r\n    const {data, loading} = useGetTeacherClassesQuery({variables: {id: id}})\r\n    if (loading) return <div>loading...</div>\r\n    console.log(data, \"data\", id)\r\n    return <div className=\"create-selection__container\">\r\n                {ParseData(data!)}\r\n        </div>\r\n}\r\n\r\nconst CreateWorkLinks:react.FC<IECreateWorkLink> = (props) => {\r\n    const {url} = useRouteMatch();\r\n    console.log(props.link)\r\n    let link = props.link.split(\"/\")\r\n    link.pop()\r\n    let newlink = link.join(\"/\")\r\n    return <Switch>\r\n        <Route path={`${url}/:subject_id`}>\r\n            <TeacherWorkCreate link={\r\n                newlink + \"/my-classes\"\r\n                }></TeacherWorkCreate>\r\n        </Route>\r\n        <Route path={url}>\r\n            <CreateLessonSelection></CreateLessonSelection>\r\n        </Route>\r\n    </Switch>\r\n}\r\n\r\nexport const TeacherLobbyContentRouter:react.FC = () => {\r\n    let content = <div>error</div>\r\n    const {url} = useRouteMatch();\r\n    const {setActiveName} = useContext(ChildContext);\r\n    let {type} = useParams<IEParams>();\r\n    switch (type) {\r\n        case \"my-classes\": \r\n            content = <TeacherClasses></TeacherClasses>\r\n            break\r\n        case \"create-work\":\r\n            content = <CreateWorkLinks link={url}></CreateWorkLinks>\r\n            break\r\n        case \"check-works\":\r\n            content = <TeacherWorkCheck></TeacherWorkCheck>\r\n            break\r\n        case \"works-archieve\":\r\n            content = <div>works archieve</div>\r\n            break\r\n    }\r\n    setActiveName(type);\r\n    return content;\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childLobbyContentRouter.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Buttons.tsx",["246","247","248","249","250","251","252"],"import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./css/Buttons.css\"\r\nimport download from \"../images/download.svg\"\r\nimport { CSSProperties } from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface ButtonsConfig{\r\n    text?:String;\r\n    handleClick:Function;\r\n    style?:boolean;\r\n    class?:string;\r\n    children?:React.ReactNode;\r\n};\r\n\r\nexport const DefaultButton : React.FC<ButtonsConfig> = (props) => {\r\n    const btnStyle = {\r\n        width:\"30vw\",\r\n        height:\"5vw\"\r\n    };\r\n    const classes = \"defaultButton \" + (props.class == undefined ? \"\" : props.class);\r\n    return (\r\n        <button className={classes} style={props.style == true? btnStyle:{}} onClick={()=> props.handleClick()}>{props.children}</button>\r\n    );\r\n}\r\n\r\nexport const DownloadButton : React.FC<ButtonsConfig> = (props) => {\r\n    return (\r\n        <button className=\"DownloadButton\" onClick={()=> props.handleClick()}><img src={download}></img></button>\r\n    );\r\n}\r\n\r\ninterface ToogleConfig{\r\n    handleChange:Function;\r\n    buttons:Array<string>;\r\n}\r\n\r\n\r\n/*\r\n-uikit\r\n    ToggleButton\r\n        -index.tsx\r\n        toggleButton.module.css\r\n*/","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\orgCard.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\generated\\graphql.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\wirteToken.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\MUTATIONS\\registerUser.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\MUTATIONS\\getToken.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Inputs.tsx",["253","254","255","256"],"import { type } from 'os';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./css/InputField.css\"\r\n\r\ninterface InputsConfig{\r\n    placeHolder?:string;\r\n    handleChange?:Function;\r\n    value?:string;\r\n    type?: string;\r\n    class?:string;\r\n};\r\n\r\nexport const DefaultInput : React.FC<InputsConfig> = (props) => {   \r\n    const classes = \"myInput \" + (props.class == undefined ? \"\" : props.class); \r\n    return (\r\n        <input className={classes} placeholder={props.placeHolder} onChange={\r\n            (event)=> props.handleChange != undefined ? props.handleChange(event) : {}} \r\n            type={props.type} value={props.value!}></input>\r\n    );\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childSubjectWidget.tsx",["257","258","259"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherClasses.tsx",["260"],"import react, {useContext} from \"react\";\r\n\r\nimport {ChildContext} from \"./childContext\";\r\nimport {TeacherClassCard} from \"../../uiKit/teacherClassCard\";\r\n\r\nimport \"../css/teacher-classes.css\"\r\n\r\nimport {teacherSubjectQuery} from \"../../QUERIES/getTeacherSubjects\";\r\nimport {useQuery} from \"@apollo/client\";\r\n\r\nimport {Switch, Route, Link, useRouteMatch} from \"react-router-dom\"\r\nimport {SubjectDetail} from \"./subjectDetail\";\r\n\r\ninterface IETeacherClass{\r\n    node: {\r\n        name:string;\r\n        lessonsLen:number;\r\n        id:string;\r\n        group: {\r\n            name:string;\r\n            childrenLen:number;\r\n        }\r\n    }\r\n}\r\n\r\nfunction parseData(data:IETeacherClass[], url:string){\r\n    let res = []\r\n    for (let node of data){\r\n        res.push(\r\n            <Link to={`${url}/${node.node.id}`}>\r\n                <TeacherClassCard\r\n                    name={node.node.name}\r\n                    childrenLen={node.node.group.childrenLen}\r\n                    lessonsLen={node.node.lessonsLen}\r\n                    groupName={node.node.group.name}\r\n                ></TeacherClassCard>\r\n            </Link>\r\n\r\n        )\r\n    }\r\n    return res;\r\n}\r\n\r\n\r\nexport const TeacherClasses:react.FC = () => {\r\n    const {url} = useRouteMatch()\r\n    const {id} = useContext(ChildContext)\r\n    let {loading, data} = useQuery(teacherSubjectQuery, {variables: {id:id}})\r\n    if (loading) return <div>loading...</div>\r\n    console.log(data);\r\n    data = data.teacher.subjectclasslocalSet.edges as IETeacherClass[];\r\n    const res = parseData(data, url);\r\n    let a = \"\";\r\n    return <div className=\"teacher-classes__content\">\r\n        <Switch>\r\n            <Route path={`${url}/:id`}> \r\n                <SubjectDetail prevLink={url}></SubjectDetail> \r\n            </Route>\r\n            <Route path={`${url}`}>\r\n                <div className=\"teacher-classes__heading\">Ваши классы</div>\r\n                {res}\r\n            </Route>\r\n        </Switch>\r\n        \r\n    </div>\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getTeacherSubjects.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Cards.tsx",["261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./css/Cards.css\";\r\nimport image1 from \"../images/cardImg.svg\";\r\nimport image2 from \"../images/cardImg1.svg\";\r\nimport image3 from \"../images/cardImg2.svg\";\r\nimport image4 from \"../images/cardImg3.svg\";\r\nimport image5 from \"../images/cardImg4.svg\";\r\nimport {DefaultButton} from \"./Buttons\"\r\nimport { TaskRow } from './ChildTestDetail';\r\n\r\n\r\ninterface SubjectConfig{\r\n    teacher:string;\r\n    subject:string;\r\n    date?:Date;\r\n    newTasks?:number;\r\n    class:string;\r\n    onClick:Function;\r\n};\r\n\r\nexport const SubjectCard : React.FC<SubjectConfig> = (props) => {\r\n    function getRandomInt(min:number, max:number) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min; \r\n      }\r\n\r\n    let image;\r\n\r\n    let images = [image5,image1,image2,image3,image4]\r\n\r\n    image = images[getRandomInt(0,images.length)]\r\n    return (\r\n        <button className=\"SbCard\" onClick={(event)=>props.onClick(event)}>\r\n            <div className=\"card__content\">\r\n                <div className=\"subDiv\">\r\n                    <div className=\"group\">\r\n                        <div className=\"SubjectText\">{props.subject}</div>\r\n                        <div className=\"TeacherText\">{props.teacher}</div>\r\n                    </div>\r\n                    <div className=\"back_label\">Класс: <span className=\"colorized\">{props.class}</span></div>\r\n                </div>\r\n                <div className=\"taskDiv\">\r\n                    <div className={props.newTasks==undefined? \"noTasks\":\"newTasks\"}>{props.newTasks==undefined? \"Нет заданий\":`Новое задание(${props.newTasks})`}</div>\r\n                    <div className=\"TeacherText\">\r\n                        {props.newTasks==undefined? \"\": props.date == undefined? \"\":\"до \" + props.date?.getDate() + \".\" + props.date?.getMonth()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <img className=\"image\" src={image}></img>\r\n            \r\n\r\n        </button>\r\n    );\r\n}\r\n\r\ninterface TaskConfig{\r\n    subject:string;\r\n    theme:string;\r\n    teacher:string;\r\n    period?:Date;\r\n    questions:number;\r\n    minuts?:number;\r\n    task:Function;\r\n}\r\n\r\nfunction declOfNum(number:number, words:Array<string>) {  \r\n    return words[(number % 100 > 4 && number % 100 < 20) ? 2 : [2, 0, 1, 1, 1, 2][(number % 10 < 5) ? number % 10 : 5]];\r\n}\r\n\r\nexport const TaskCard :React.FC<TaskConfig> = (props) => {\r\n\r\n\r\n    return(\r\n        <div className=\"tkCard\">\r\n            <span className=\"SubjectText\">{props.subject}</span>\r\n            <p>\r\n                <span className=\"noTasks\">{props.theme}</span><br></br>\r\n                <span className=\"TeacherText\">{props.teacher}</span><br></br>\r\n                <span className=\"TeacherText\">{props.period==undefined? \"не ограничено\": \"до \" + props.period?.getDate() + \".\" + props.period?.getMonth()+\".\"+props.period?.getFullYear()+\"    \"+props.period.getHours()+\":\"+ props.period.getMinutes()}</span>\r\n\r\n\r\n            </p>\r\n            <p>\r\n                <span className=\"noTasks\">{props.questions.toString() + declOfNum(props.questions, [\" вопрос\",\" вопроса\",\" вопросов\"])}</span><br></br>\r\n                <span className=\"noTasks\">{props.minuts==undefined? \"Время на выполнение неограничено\": props.minuts.toString() + declOfNum(props.minuts,[' минута', ' минуты', ' минут' + \" \"])}\r\n                    {props.minuts==undefined? \"\":<span className=\"TeacherText\"> на выполнение</span>}\r\n                </span>\r\n            </p>\r\n\r\n            <DefaultButton text=\"начать выполнение\" handleClick={()=>props.task()} style={true}></DefaultButton>\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface GradeConfig{\r\n    subject:string;\r\n    theme:string;\r\n    teacher:string;\r\n    period?:Date;\r\n    grade_num?:number;\r\n    grade_text?:string;\r\n    exeptions?:number;\r\n}\r\n\r\nexport const GradeCard :React.FC<GradeConfig> = (props) => {\r\n\r\n    function declOfNum(number:number, words:Array<string>) {  \r\n        return words[(number % 100 > 4 && number % 100 < 20) ? 2 : [2, 0, 1, 1, 1, 2][(number % 10 < 5) ? number % 10 : 5]];\r\n    }\r\n    return(\r\n        <div className=\"tkCard\">\r\n            <span className=\"SubjectText\">{props.subject}</span>\r\n            <p>\r\n                <span className=\"noTasks\">{props.theme}</span><br></br>\r\n                <span className=\"TeacherText\">{props.teacher}</span><br></br>\r\n                <span className=\"TeacherText\">{props.period==undefined? \"не ограничено\": \"до \" + props.period?.getDate() + \".\" + props.period?.getMonth()+\".\"+props.period?.getFullYear()+\"    \"+props.period.getHours()+\":\"+ props.period.getMinutes()}</span>\r\n\r\n\r\n            </p>\r\n            <div className=\"p\">\r\n                <span className=\"grade\">{props.grade_num == undefined? props.grade_text:props.grade_num}</span>\r\n                <span className=\"SubjectText\" style={{color:\"#565656\", display:\"flex\", justifyContent:\"flex-end\", flexDirection:\"column\"}}><span style={{display:\"block\",position:\"relative\",bottom:\"0\" }}>{props.exeptions == undefined? \"\":props.exeptions + declOfNum(props.exeptions, [\" ошибка\", \" ошибки\", \" ошибок\"])}</span></span>\r\n            </div>\r\n\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface GradeSubject{\r\n    subject:string;\r\n    grades:Array<any>\r\n}\r\n\r\nexport const GradeSubjectCard : React.FC<GradeSubject> = (props) => {\r\n\r\n    let classNames = [\"grayGrade\",\"grayGrade\",\"grayGrade\",\"purpleGrade\",\"purpleGrade\"]\r\n    let grades = new Array()\r\n\r\n    props.grades.forEach((el:any) => {\r\n        grades.push(<span className={classNames[el-1]}>{\"  \"+ el +\"   \"}</span>)\r\n      })\r\n\r\n    return (\r\n        <div className=\"SbCard\">\r\n            <p className=\"sbp\">\r\n                <span className=\"SubjectText\">{props.subject}</span><br/>\r\n                {grades}\r\n            </p>\r\n        </div>\r\n    );\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\subjectDetail.tsx",["277","278","279","280"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\teacherClassCard.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getLessonInfo.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\lessonDetails.tsx",["281","282","283","284","285","286","287","288","289","290","291","292","293","294","295"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\lessonWidget.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\createMaterial.tsx",["296","297","298"],"import react, {useState} from \"react\";\r\n\r\n\r\nimport \"../css/CreateMaterial.css\"\r\n\r\nimport {MyToogleButton} from \"../../uiKit/toggleButton\";\r\n\r\nimport {Switch, Route, useRouteMatch, useParams, useHistory} from \"react-router-dom\";\r\n\r\nimport {DefaultInput} from \"../../uiKit/Inputs\";\r\nimport {DefaultButton} from \"../../uiKit/Buttons\";\r\n\r\nimport {Editor} from \"../../uiKit/editor\";\r\n\r\nimport {\r\n    useMaterialQuery, \r\n    useChangeMaterialMutation, \r\n    useAddMaterialMutation\r\n} from \"../../generated/graphql\";\r\n\r\nimport cross from \"../../images/cross.svg\";\r\n\r\ninterface MaterialCreation{\r\n    id:string;\r\n    name?:string;\r\n    data?:string;\r\n    type?:string;\r\n    materialId?:string;\r\n} \r\n\r\ninterface MaterialParams{\r\n    type:string;\r\n}\r\n\r\n\r\n\r\nfunction returnRedaction(history:any, link:string){\r\n    let splittedLink = link.split(\"/\");\r\n    history.push(splittedLink.slice(0, splittedLink.length-2).join(\"/\"))\r\n}\r\n\r\nconst LinkMaterial:react.FC<MaterialCreation> = (props) => {\r\n    console.log(props)\r\n    const [name, setName] = useState(props.name)\r\n    const [link, setLink] = useState(props.data)\r\n    \r\n    const {url} = useRouteMatch();\r\n    const history = useHistory()\r\n    const [pushLink] = useAddMaterialMutation();\r\n    const [updateLink] = useChangeMaterialMutation();\r\n    return <div className=\"link-material__container\">\r\n        <p className=\"material-creation__text\">Название ссылки</p>\r\n        <DefaultInput value={name} class=\"material-creation__input\" handleChange={(e:any) => {\r\n            setName(e.target.value)}}\r\n        ></DefaultInput>\r\n        <p className=\"material-creation__text\">Ссылка</p>\r\n        <DefaultInput value={link} class=\"material-creation__input\" handleChange={(e:any) => {\r\n            setLink(e.target.value)\r\n        }}></DefaultInput>\r\n        <DefaultButton handleClick={() => {\r\n            props.materialId == undefined ? \r\n            pushLink({variables:{id:props.id, data:link!, type:\"link\", name:name!}}) :\r\n            updateLink({variables:{\r\n                id:props.materialId,\r\n                data:link!,\r\n                name:name!\r\n                }})\r\n            returnRedaction(history, url);\r\n            window.location.reload()\r\n        }}>Сохранить</DefaultButton>\r\n    </div>\r\n}\r\n\r\nconst MaterialMaterial:react.FC<MaterialCreation> = () => {\r\n    return <div className=\"link-material__container\">\r\n        <p className=\"material-creation__text\">Название</p>\r\n        <DefaultInput class=\"material-creation__input\"></DefaultInput>\r\n        <p className=\"material-creation__text\">Контент</p>\r\n        <Editor child={false}></Editor>\r\n        <DefaultButton handleClick={() => {}}>Сохранить</DefaultButton>\r\n    </div>\r\n}\r\n\r\nconst CreateMaterialWidgetContent:react.FC<MaterialCreation> = (props) => {\r\n    console.log(props, \"public props\")\r\n    const {type} = useParams<MaterialParams>();\r\n    let content = props.type! == \"link\" ? \r\n    <LinkMaterial \r\n        id={props.id}\r\n        name={props.name}\r\n        data={props.data}\r\n        materialId={props.materialId}\r\n    ></LinkMaterial> : \r\n    <MaterialMaterial\r\n    id={props.id}\r\n    name={props.name}\r\n    data={props.data}\r\n    ></MaterialMaterial>\r\n    switch (type) {\r\n        case \"link\":\r\n            content = <LinkMaterial id={props.id} materialId={props.materialId}></LinkMaterial>\r\n            break;\r\n        case \"material\":\r\n            content = <MaterialMaterial id={props.id}></MaterialMaterial>\r\n    }\r\n    return <div className=\"content-pading\">\r\n        {content}\r\n    </div> \r\n}\r\n\r\ninterface IEParams{\r\n    id?:string;\r\n}\r\n\r\nexport const CreateMaterialWidget:react.FC<MaterialCreation> = (props) => {\r\n    const {url} = useRouteMatch();\r\n    const {id} = useParams<IEParams>();\r\n    const {loading, data} = useMaterialQuery({variables:{id:id!}})\r\n    const history = useHistory();\r\n\r\n    if (loading) return <div>loading...</div>\r\n\r\n    return <div>\r\n\r\n\r\n        <div className=\"create-material__container-absolute\">\r\n        </div>\r\n        <div className=\"container-local__container\">\r\n            <div className=\"create-material__container-local\">\r\n            <div className=\"nav__container\">\r\n            { id == undefined ?    \r\n            <MyToogleButton handleChange = {() => {}} buttons = {[{name: \"ссылка\", link:`${url}/link`}, \r\n                        {name: \"материал\", link:`${url}/material`}]}></MyToogleButton> : <div></div>}\r\n            <img src={cross} alt=\"\" onClick={() => {returnRedaction(history, url)}}/>\r\n            </div>\r\n            \r\n            \r\n            <Switch>\r\n\r\n                <Route path={`${url}/:type`}>\r\n                    <CreateMaterialWidgetContent id={props.id} materialId={id}></CreateMaterialWidgetContent>\r\n                </Route>\r\n                <Route path={`${url}`}>\r\n                    <CreateMaterialWidgetContent id={props.id} \r\n                        data={data?.material?.data}\r\n                        name = {data?.material?.name}\r\n                        type = {data?.material?.Type} \r\n                        materialId = {id}\r\n                        ></CreateMaterialWidgetContent>    \r\n                </Route>\r\n            </Switch>\r\n            </div>\r\n        </div>\r\n    </div>\r\n     \r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\editor.jsx",["299"],"import React, {useEffect, useState} from \"react\";\r\n\r\nimport {CKEditor} from \"@ckeditor/ckeditor5-react\";\r\n\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\n\r\nimport \"./css/editor.css\"\r\n\r\nexport const Editor = (props) => {\r\n    useEffect(() => {\r\n        let a = document.getElementsByClassName(\"ck-editor__top\")[0]\r\n        if (props.child) {\r\n            try{\r\n                console.log(a)\r\n                a.style = \"display:none!important\";\r\n            } catch{\r\n                \r\n            }\r\n        }\r\n        console.log(\"hello from useEffect\")\r\n    })\r\n\r\n    return <CKEditor\r\n        className=\"editor\"\r\n        editor={ClassicEditor}\r\n        data = {props.content}\r\n        disabled = {props.child}\r\n        onChange = {props.onChange}\r\n        plugins = {[]}\r\n        toolbar = {[\"imageInsert\"]}\r\n        config={{ckfinder: {\r\n            // Upload the images to the server using the CKFinder QuickUpload command\r\n            // You have to change this address to your server that has the ckfinder php connector\r\n            filebrowserBrowseUrl: '/ckfinder/ckfinder.html',\r\n\t\t\tfilebrowserImageBrowseUrl: '/ckfinder/ckfinder.html?type=Images',\r\n\t\t\tfilebrowserUploadUrl: '/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Files',\r\n\t\t\tfilebrowserImageUploadUrl: '/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Images'\r\n        },\r\n        image : {\r\n                toolbar: [\"imageTextAlternative\"]\r\n        }\r\n\r\n    }}\r\n        \r\n        \r\n    >\r\n    </CKEditor>\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\toggleButton.tsx",["300"],"import React, {useState} from 'react';\r\nimport \"./css/Buttons.css\"\r\nimport { ToggleButton, ToggleButtonGroup} from '@material-ui/lab';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\ninterface IEButton {\r\n    name:string;\r\n    link:string;\r\n}\r\n\r\ninterface ToogleConfig{\r\n    handleChange:Function;\r\n    buttons:Array<IEButton>;\r\n}\r\n\r\n\r\n\r\nexport const MyToogleButton : React.FC<ToogleConfig> = (props) =>{\r\n    let [active, setActive] = useState(false)\r\n    const TGbtn = {\r\n        fontFamily:  \"'Montserrat', sans-serif\",\r\n        background: \"#FFFFFF\",\r\n        border: \"1px solid #F5F5F5\",\r\n        borderRadius: \"10px\",\r\n        fontSize: \"20px\",\r\n        color:\"#000000\",\r\n        outline:\"none!important;\",\r\n        padding:\"20px;\",\r\n        width: \"220px\"\r\n    }\r\n\r\n    const TGbtnActive = {\r\n        background: \"#F5F5F5\",\r\n        border: \"none\",\r\n        fontFamily:  \"'Montserrat', sans-serif\",\r\n        fontSize: \"20px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        letterSpacing: \"0.2px\",\r\n        color:\"#636363\",\r\n        borderRadius: \"10px\",\r\n        width: \"220px\"\r\n    }\r\n    const TGbtnGroup = {\r\n        border: \"none\",\r\n\r\n        background: \"#F5F5F5\",\r\n        borderRadius: \"10px\"\r\n        \r\n    }\r\n\r\n    let buttons = new  Array<JSX.Element>()\r\n    props.buttons.forEach((el) => {\r\n        buttons.push(\r\n            <Link to={el.link}>\r\n                <ToggleButton \r\n                onClick={(e) => setActive(!active)} \r\n                style={props.buttons.indexOf(el)==0?   active? TGbtn:TGbtnActive: !active? TGbtn:TGbtnActive} \r\n                value={el.name} aria-label={el.name}>\r\n                    {el.name}\r\n                </ToggleButton>\r\n            </Link>\r\n            \r\n            )\r\n      })\r\n    return(\r\n        <ToggleButtonGroup style={TGbtnGroup} orientation=\"horizontal\">\r\n            {buttons} \r\n        </ToggleButtonGroup>\r\n    );\r\n}\r\n","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\testCreation.tsx",["301","302","303","304","305","306","307","308","309","310","311","312","313","314"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Calendar.jsx",["315","316","317","318","319","320","321"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\timestamp.jsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherWorkCreate.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\testCompletion.tsx",["322","323","324","325","326","327","328"],"import react, {useState, useContext} from \"react\";\r\nimport {\r\n    useParams, \r\n    useRouteMatch, \r\n    Link,\r\n    Switch,\r\n    Route,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport ReactPlayer from \"react-player\";\r\nimport {\r\n    useChildtestQuery, ChildtestQuery, useCreateSheetMutation, useCreateAnswerMutation,\r\n    useGetAnswerDataQuery,\r\n    useAnswerTeacherDetailQuery\r\n} from \"../../generated/graphql\"\r\n\r\nimport {Pagination} from \"../../uiKit/truePagination\";\r\nimport {DefaultButton} from \"../../uiKit/Buttons\";\r\n\r\nimport \"../css/test-completion.css\"\r\nimport { DefaultInput } from \"../../uiKit/Inputs\";\r\nimport {ChildContext} from \"./childContext\";\r\n\r\nimport {Editor} from \"../../uiKit/editor\";\r\nimport {ButtonGroup} from \"../../uiKit/ButtonGroup\";\r\nimport {AudioRecButton} from \"../../uiKit/audioRecButton\";\r\n\r\nimport {TrueFalseQuestionWidget} from \"../../uiKit/TrueFalseQuestion\";\r\n\r\nexport const TestCompletionContext = react.createContext({\r\n    setActive: (e:number) => {},\r\n    link: \"\",\r\n    test: [] as ChildtestQuery,\r\n    answersheetId: \"\",\r\n    getAnswerSheetId: () => {return String();}\r\n})\r\n\r\nfunction ExtendedInputDecode(data:string) {\r\n    return JSON.stringify({data: data})\r\n}\r\n\r\nconst ExtendedInputParse:react.FC<IETestCompletionPart> = (props) => {\r\n    return <Editor\r\n    data=\"\"\r\n    onChange={(e:any, editor:any) => {\r\n        props.varChange(editor.getData())\r\n    }}\r\n></Editor>\r\n}\r\n\r\ninterface IETestCompletionPart{\r\n    data:ChildtestQuery;\r\n    varChange:Function;\r\n    id:Number;\r\n}\r\n\r\ninterface IESelectionThemeTheme{\r\n    data: {\r\n        index:Number;\r\n        value:string;\r\n    }[]\r\n}\r\n\r\nconst SelectionThemeParse:react.FC<IETestCompletionPart> = (props) => {\r\n    const [res, setRes] = useState({\r\n        theme: \"\",\r\n        audio: \"\"\r\n    });\r\n    console.log(res, \"res\")\r\n    const {answersheetId} = useContext(TestCompletionContext);\r\n    const {index} = useParams<{index:string}>();\r\n    const {loading, data} = useGetAnswerDataQuery({variables:{\r\n        answerSheetId: answersheetId,\r\n        number: Number(index)\r\n    }})\r\n    if (loading) return <div>loading...</div>;\r\n    console.log(data);\r\n    let currentTheme = \"\";\r\n    try {\r\n        console.log(data)\r\n        currentTheme = \r\n            (JSON.parse(\r\n                data?.answerSheet?.answerSet.edges[0]?.node?.content!\r\n                ) as {data:{theme:string}}).data.theme\r\n    } catch{}\r\n    props.varChange(JSON.stringify(res));\r\n    let themes = \r\n        JSON.parse(props.data.test?.taskSet.edges![Number(props.id)]?.node?.practise!) as IESelectionThemeTheme\r\n    console.log(themes, \"themes\", currentTheme)\r\n    return <div className=\"selection-theme-page__container\">\r\n        <ButtonGroup onChange={(e:string) => {\r\n            console.log(e, \"name\", res, res.audio)\r\n            setRes({\r\n                audio:res.audio,\r\n                theme:e\r\n        })}} group={\r\n            themes.data.map((e)=> {\r\n                return e.value\r\n            })\r\n        } \r\n        button_underName=\"Выбранная тема\" active={currentTheme}></ButtonGroup>\r\n        <AudioRecButton onChange = {(data:string) => {\r\n            console.log(res, res.theme, \"theme\")\r\n            setRes({\r\n            theme: res.theme,\r\n            audio: data\r\n        })}}></AudioRecButton>\r\n    </div>\r\n}\r\n\r\nfunction TaskProvider(elem:react.FC<IETestCompletionPart>) {\r\n    return function(props:IETestCompletionPart){\r\n        return react.createElement(\r\n            elem, \r\n            {...props},\r\n            )\r\n    }\r\n}\r\n\r\nconst GetAnswerFunction = (questionNumber:number) => {\r\n    const {answersheetId} = useContext(TestCompletionContext);\r\n    const {loading, data} = useGetAnswerDataQuery({variables:{\r\n        answerSheetId:answersheetId,\r\n        number:questionNumber\r\n    }});\r\n    \r\n}\r\n\r\nconst TrueFalseQuestion:react.FC<IETestCompletionPart> = (props) => {\r\n    const {index} = useParams<{index:string}>();\r\n    const {answersheetId} = useContext(TestCompletionContext);\r\n    const {data, loading} = useGetAnswerDataQuery({variables: {\r\n        answerSheetId:answersheetId,\r\n        number: Number(index)\r\n    }})\r\n    if (loading) {return <div>loading..</div>}\r\n    let contentContainer = data?.answerSheet?.answerSet.edges[0]?.node?.content;\r\n    try {\r\n        contentContainer = (JSON.parse(contentContainer!) as {data:string}).data;\r\n    }\r\n    catch {}\r\n    //const {data, loading} = \"\";\r\n    return <div>\r\n        <TrueFalseQuestionWidget isTrue={Boolean(contentContainer)} onChange={\r\n            (e:boolean) => {\r\n                props.varChange(JSON.stringify({data: e}));\r\n            }}></TrueFalseQuestionWidget>\r\n    </div>;\r\n}\r\n\r\nconst TestCompletionTaskManager = new Map<string, Function>([\r\n    [\"расширенный письменный ответ\", TaskProvider(ExtendedInputParse)],\r\n    [\"монологическое высказывание на выбранную тему\", TaskProvider(SelectionThemeParse)],\r\n    [\"правда/ложь\", TaskProvider(TrueFalseQuestion)] \r\n])\r\n\r\nconst TestCompletionTaskDecoder = new Map<string, Function>([\r\n    [\"расширенный письменный ответ\", ExtendedInputDecode],\r\n    [\"монологическое высказывание на выбранную тему\", ExtendedInputDecode],\r\n    [\"правда/ложь\", ExtendedInputDecode] \r\n])\r\n\r\nconst Timer:react.FC = () => {\r\n    const [timer, setTimer] = useState(0);\r\n    setTimeout(() => {\r\n        setTimer(timer+1)\r\n    }, 1000)\r\n    return <div className=\"timer\">{new Date(timer * 1000).toISOString().substr(11, 8)}</div>\r\n}\r\n\r\nconst TestCompletionRoute:react.FC = () => {\r\n    const {url} = useRouteMatch()\r\n    const {test, setActive, getAnswerSheetId, answersheetId} = useContext(TestCompletionContext);\r\n    const [data, setData] = useState(\"\")\r\n    console.log(data)\r\n    const {index} = useParams<{index:string}>();\r\n    console.log(index, \"index\")\r\n    const Answer = useCreateAnswerMutation({variables: {\r\n        sheet: answersheetId, \r\n        data: TestCompletionTaskDecoder.get(\r\n            test.test?.taskSet.edges[Number(index)]?.node?.Type.name!)!(data), \r\n        number: Number(index)\r\n    }})\r\n    setActive(Number(index))\r\n    const widget = TestCompletionTaskManager.get(\r\n        test.test?.taskSet.edges[Number(index)]?.node?.Type.name!)!({\r\n            data:test, varChange:setData, id:Number(index)!})\r\n    console.log(test)\r\n    return <div className=\"test-completion-route__container\">\r\n        <div className=\"test-type\">{test.test?.taskSet.edges[Number(index)]?.node?.Type.name!}</div>\r\n        <div className=\"theory\"> \r\n            <div dangerouslySetInnerHTML={{__html:test.test?.taskSet.edges[Number(index)]?.node?.theory!}}></div>\r\n        </div>\r\n        {widget}\r\n        <DefaultButton handleClick={() => {\r\n            console.log(data, \"data\")\r\n            Answer[0]()\r\n        }} class=\"btn answer-btn\">Ответить</DefaultButton>\r\n        <Link to={`${url}/complete`} className=\"btn-test-compl\">\r\n        <button className=\"btn-test-comp__canceled btn-test-compl end-btn\">Закончить</button>\r\n\r\n        </Link>\r\n    </div>\r\n}\r\n\r\nconst CompleteWidget:react.FC = () => {\r\n    return <div className=\"complete__container\">\r\n        <div className=\"complete__haders\">\r\n            Спасибо что выполнили тест\r\n        </div>\r\n        <Link to=\"/\">\r\n            <button className=\"btn-test-comp__canceled btn-test-compl end-btn\">Вернуться на главную</button>\r\n\r\n        </Link>\r\n    </div>\r\n}\r\n\r\ninterface IETestCompletion{\r\n    link:string;\r\n}\r\n\r\nexport const TestCompletion:react.FC<IETestCompletion> = (props) => {\r\n    const {id} = useParams<{id:string}>();\r\n    const history = useHistory()\r\n    const params = useContext(ChildContext);\r\n    const [active, setActive] = useState(-1);\r\n    const [answerSheetId, setAnswerSheetId] = useState(\"\");\r\n    const getData = () => {return answerSheetId!;}\r\n    console.log(id, params)\r\n    const createSheet = useCreateSheetMutation({variables: \r\n            {child:localStorage.getItem(\"id\")!, test:id}, onCompleted: (data) => {\r\n                setAnswerSheetId(data.createAnwerSheet?.answer?.id!)\r\n            }},)\r\n    console.log(active)\r\n    const {loading, data} = useChildtestQuery({variables:{testId:id}})\r\n    const {url} = useRouteMatch()\r\n    if (loading) {\r\n        return <div>loading...</div>\r\n    }\r\n\r\n    return <TestCompletionContext.Provider value = {\r\n            {setActive:setActive, link:url, test:data!, answersheetId:answerSheetId,\r\n            getAnswerSheetId: getData}}>\r\n        <div className=\"centered\">\r\n            <div className=\"test-completion__container\">\r\n            <Pagination link={url} length={data?.test?.taskSet.edges.length!} active={active}></Pagination>\r\n            <Timer></Timer>\r\n            <div className=\"test-completion__main-content\">\r\n                <Switch>\r\n                <Route path={`${url}/:index/complete`}>\r\n                        <CompleteWidget></CompleteWidget>\r\n                    </Route>\r\n                    <Route path={`${url}/:index`}>\r\n                        <TestCompletionRoute></TestCompletionRoute>\r\n                    </Route>\r\n        \r\n                    <Route path={url}>\r\n                        <div className=\"test-completion__heading\">\r\n                            {data?.test?.name.trim()}\r\n                        </div>\r\n                        <div className=\"test-completion__subject\">\r\n                            {data?.test?.lesson.typeLesson.name}\r\n                        </div>\r\n                        <div className=\"questions\">\r\n                            Вопросов:&nbsp;<span className=\"colorize\">{data?.test?.taskSet.edges.length}</span>\r\n                        </div>\r\n                        <Link to={`${url}/0`} className=\"btn-test-compl\">\r\n                            <DefaultButton handleClick={() => {setActive(0); createSheet[0]()}} class=\"btn-test-compl\">Выполнить</DefaultButton>\r\n                        </Link>\r\n                            <button className=\"btn-test-comp__canceled btn-test-compl\" \r\n                                onClick={() => {\r\n                                    history.goBack()\r\n                                }}>Отмена</button>\r\n                    </Route>\r\n                </Switch>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n        </TestCompletionContext.Provider>\r\n        \r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\pagination.tsx",["329","330","331"],"import React, {useImperativeHandle, useState, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport \"./css/Pagination.css\"\r\n\r\ninterface PaginationConfig{\r\n    quantity:number;\r\n    handleClick:Function;\r\n    thisPage?:number;\r\n    pageList?:Array<number>\r\n};\r\n\r\n// export const Pagination : React.FC<PaginationConfig> \r\n// = (props) => {\r\n//     let list = new Array<JSX.Element>()\r\n//     for (var i = 1; i <= props.quantity; i++) {\r\n//         let el;\r\n//         if (i == props.thisPage){\r\n//              el = <button className = \"paginationBTN green\" onClick={()=>props.handleClick(i)}>{i}</button>\r\n//         }\r\n//         else if(props.pageList.includes(i)){\r\n//             el = <button className = \"paginationBTN gray\" onClick={()=>props.handleClick(i)}>{i}</button>\r\n\r\n//         }\r\n//         else{\r\n//             el = <button className = \"paginationBTN yellow\" onClick={()=>props.handleClick(i)}>{i}</button>\r\n//         }\r\n//         list.push(el)\r\n//      }\r\n//     return(\r\n//         <div className=\"row\">\r\n//             {list}\r\n//         </div>\r\n\r\n//     );\r\n// }\r\n\r\nexport const MyPagination : React.FC<PaginationConfig> = (props) => {\r\n    useEffect(()=>{\r\n        const content = [\r\n            \"4\",\r\n            \"5\",\r\n            \"6\",\r\n            \"7\"\r\n\r\n        ]\r\n        let pag = document.getElementsByClassName(\"pagination\")[0]\r\n        console.log(content)\r\n        for(let elem of pag.children){\r\n            if (content.includes(elem.children[0].innerHTML)){\r\n                console.log(elem.children[0].innerHTML)\r\n\r\n                // console.log(elem.children[0])\r\n                elem.innerHTML = elem.innerHTML.replace('<a', '<a style=\"background-color:magenta\"')\r\n            }\r\n        }\r\n    })\r\n    return(\r\n        <ReactPaginate\r\n        previousLabel={'previous'}\r\n        nextLabel={'next'}\r\n        breakLabel={'...'}\r\n        breakClassName={'break-me'}\r\n        pageCount={props.quantity}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={10}\r\n        onPageChange={()=>props.handleClick()}\r\n        containerClassName={'pagination'}\r\n        activeClassName={'active'}\r\n      />\r\n    );\r\n}",["332","333"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\truePagination.tsx",["334","335","336","337","338"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherCheckWorks.tsx",["339","340","341","342","343"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\FileInput.jsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\ButtonGroup.tsx",["344","345"],"import react, {useState, useContext} from \"react\";\r\n\r\nimport \"./css/buttonGroup.css\"\r\n\r\nconst ButtonContext = react.createContext({\r\n    setActive:(name:string) => {},\r\n    underName:\"\"\r\n})\r\n\r\n\r\ninterface IEButtonGroup{\r\n    onChange:Function;\r\n    group:string[];\r\n    button_underName:string;\r\n    active?:string;\r\n}\r\n\r\ninterface IEButtonButtonGroup{\r\n    active:boolean;\r\n    name:string;\r\n}\r\n\r\nconst ButtonButtonGroup:react.FC<IEButtonButtonGroup> = (props) => {\r\n    const {setActive, underName} = useContext(ButtonContext);\r\n    return <div className=\"button-button__container\">\r\n        <button className={\"button-button__button \" + (props.active ? \"button-button__active\" : \"\")} onClick={() => {\r\n            setActive(props.name)\r\n        }}>{props.name}</button>\r\n        {props.active ?\r\n        <div className=\"button-button__active-label\">\r\n            {underName}\r\n        </div> :\r\n        <div></div>\r\n        }\r\n    </div> \r\n}\r\n\r\nexport const ButtonGroup:react.FC<IEButtonGroup> = (props) => {\r\n    const [active, setActive] = useState(props.group.map((e) => {return {active:props.active == e, name:e}})) \r\n    return <ButtonContext.Provider value={{\r\n        setActive: (name:string) => {\r\n            props.onChange(name)\r\n            setActive(\r\n                active.map(\r\n                    (e) => {\r\n                        return {\r\n                            name: e.name,\r\n                            active: e.name == name\r\n                        }\r\n                    }\r\n                )\r\n            );\r\n        },\r\n        underName: props.button_underName\r\n    }}>\r\n        <div className=\"button-group__container\">\r\n            {active.map((e) => {\r\n                return <ButtonButtonGroup active={e.active} name={e.name}/>\r\n            })}\r\n        </div>\r\n\r\n    </ButtonContext.Provider> \r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\audioRec.js",["346","347"],"\r\nfunction write(time, functionAfter=()=>{}) {\r\n  console.log(time, this)\r\n  console.log(navigator.mediaDevices.getUserMedia({audio:true}))\r\n  navigator.mediaDevices.getUserMedia({audio:true})\r\n  .then(stream => {handlerFunction(stream); console.log(stream)\r\n    setTimeout(()=>{this.rec.stop(); this.canWrite=false}, time*1000);})\r\n\r\n  let handlerFunction = function (stream) {\r\n    console.log(stream, \"stream\")\r\n    this.rec = new MediaRecorder(stream);\r\n    this.rec.start()\r\n    \r\n    setTimeout((e) => {\r\n      this.rec.requestData()\r\n    }, time)\r\n\r\n    let ttime = time;\r\n    console.log(time, \"time\")\r\n    let i = 1;\r\n    /*while (ttime > 0) {\r\n      console.log(ttime, \"ttime\")\r\n      setTimeout(() => {\r\n        if (!this.canWrite) return;\r\n        console.log(this.rec)\r\n        this.rec.requestData();\r\n      }, i*1000*Math.max(12, 12-ttime));\r\n      ttime-=12;\r\n      i++;\r\n    }*/\r\n    this.rec.oninactive = (e) =>{\r\n      this.rec.play()\r\n    }\r\n    this.rec.ondataavailable = e => {\r\n      console.log(e, \"e\")\r\n      let audioChunks = [];\r\n      audioChunks.push(e.data);\r\n      let blob = new Blob(audioChunks,{type:'audio/mpeg-3'});\r\n      sendData(blob);\r\n    }\r\n  }\r\n  handlerFunction = handlerFunction.bind(this);\r\n  let sendData = function (data) {\r\n    console.log(data, \"data\");\r\n    //if (!this.canWrite) return;\r\n    let reader = data.stream().getReader();\r\n    reader.read().then((e)=>{\r\n      console.log(e)\r\n      localStorage.setItem(\"audio\", e.value)\r\n    //fs.unlinkSync(path.join(filepath, 'bin'), (e)=>{console.log(e);});\r\n    });\r\n    //fs.writeFileSync(path.join(filepath, 'bin'), dat\r\n    try{\r\n      this.rec.play()\r\n    } catch{}\r\n  }\r\n  sendData = sendData.bind(this);\r\n}\r\n\r\nfunction stop() {\r\n  if (this.canWrite) this.rec.requestData();\r\n  this.canWrite = false;\r\n}\r\n\r\nclass AudioWriter {\r\n  constructor() {\r\n    this.rec = \"\";\r\n    this.canWrite = true;\r\n    this.write = write.bind(this);\r\n    this.stop = stop.bind(this);\r\n  }\r\n}\r\n\r\nexport default AudioWriter","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\audioRecButton.jsx",["348","349","350"],"import react, { useState } from \"react\";\r\nimport AudioWriter from \"../LocalStorageInteraction/audioRec\";\r\nimport \"./css/audioRecButton.css\"\r\nimport {ReactMic} from \"@cleandersonlobo/react-mic\";\r\nimport mic from \"../images/mic.svg\";\r\nimport LZString from \"lz-string\";\r\n\r\nexport const AudioRecButton= (props) => {\r\n    const [active, setActive] = useState(false);\r\n    const [data, setData] = useState(\"\");\r\n    //const writer = new AudioWriter();\r\n    //writer.write(5)\r\n    return <div class=\"button-container\">\r\n            <ReactMic\r\n            record={active}\r\n            onStop={(e)=>{\r\n                console.log(e)\r\n                e.blob.stream().getReader().read().then((e) => {\r\n                    console.log(e.value)\r\n                    setData(e.value.toString());\r\n                    console.log(LZString.compress(e.value.toString()))\r\n                    props.onChange(LZString.compress(e.value.toString()))\r\n                })\r\n                }}\r\n            ></ReactMic>\r\n            <button className={\r\n            \"audio-rec-button__container \" + (active ? \"audio-rec-button__active\" : \"\")\r\n            } onClick={() => {\r\n                if (active) {\r\n                }\r\n                else{\r\n                }\r\n                setActive(!active)\r\n                }}>\r\n            <img src={mic} alt=\"\" className=\"audio-rec__image\"/>\r\n            {active ? \"Остановить запись\" : \"Начать запись\"}\r\n            \r\n        </button>\r\n\r\n    </div> \r\n\r\n}\r\n","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\audio.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\mark.tsx",["351","352","353"],"import react, {useContext, useState} from \"react\";\r\n\r\nimport \"./css/mark.css\"\r\n\r\nconst MarkContext = react.createContext({\r\n    setActive: (index:number) => {} \r\n})\r\n\r\ninterface IEMark{\r\n    index:number;\r\n    isActive:boolean;\r\n}\r\n\r\nconst Mark:react.FC<IEMark> = (props) => {\r\n    const {setActive} = useContext(MarkContext);\r\n    return <div className={\"mark__container \" + (props.isActive ? \"mark__container-active\":\"\")} \r\n        onClick={() => {setActive(props.index)}}>{props.index}</div>\r\n}\r\n\r\ninterface IEMarkWidget{\r\n    len:number;\r\n    onChange:Function;\r\n    active?:number;\r\n}\r\n\r\nexport const MarkWidget:react.FC<IEMarkWidget> = (props) => {\r\n    console.log(props, \"markProps\")\r\n    const [active, setActive] = useState(([...Array(props.len).keys()]).map((e) => {return {state: e == props.active, idx:e};}))\r\n    console.log(active)\r\n    props.onChange(active.filter((e) => {return e.state == true}))\r\n    return <MarkContext.Provider value={{setActive:(index:number) => {\r\n            setActive(active.map((e) => {return {state: e.idx == index, idx:e.idx}}))\r\n        }}}> \r\n            <div className=\"mark-widget__container\">\r\n                {active.map((e) => {return <Mark index={e.idx} isActive={e.state}></Mark>})}\r\n            </div>\r\n        </MarkContext.Provider>\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\TaskType.tsx",["354","355","356","357"],"import react, { useContext, useState } from \"react\";\r\n\r\nimport \"./css/task-type.css\"\r\n\r\nconst TaskTypeContext = react.createContext({\r\n    setActive: (name:string) => {}\r\n})\r\n\r\ninterface TaskTypeWidget{\r\n    types: {\r\n        name:string;\r\n        id:string;\r\n    }[];\r\n    onChange:Function;\r\n    activeId:string;\r\n}\r\n\r\ninterface IETaskType{\r\n    name:string;\r\n    id:string;\r\n    isActive:boolean;\r\n}\r\n\r\nconst TaskType:react.FC<IETaskType> = (props) => {\r\n    const {setActive} = useContext(TaskTypeContext);\r\n    return <div \r\n                className={\"task-type__container \" + \r\n                    (props.isActive ? \"task-type__container-active\":\"\")}\r\n                onClick={() => {\r\n                    setActive(props.id);\r\n                    \r\n                }}>\r\n        {props.name}\r\n    </div>\r\n}\r\n\r\nexport const TaskTypeWidget:react.FC<TaskTypeWidget> = (props) => {\r\n    const [active, setActive] = useState(props.types.map((e) => {\r\n        return {\r\n            name: e.name,\r\n            id: e.id,\r\n            state: e.id == props.activeId\r\n        }\r\n    }))\r\n    props.onChange(\r\n        active.filter((e) => {return e.state == true})[0].id\r\n    )\r\n    return <TaskTypeContext.Provider value={{setActive:(name:string) => {\r\n        setActive(active.map((e) => {return {\r\n            name: e.name,\r\n            id: e.id,\r\n            state: e.id == name\r\n        }}))\r\n    }}}>\r\n        <div className=\"task-type-widget__container\">\r\n            {active.map((e) => {\r\n                return <TaskType id={e.id} name={e.name} isActive={e.state}></TaskType>\r\n            })}\r\n        </div>\r\n\r\n    </TaskTypeContext.Provider>\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\TrueFalseQuestion.tsx",["358"],"import react, {useState} from \"react\";\r\n\r\nimport \"./css/TrueFalseQuestion.css\"\r\n\r\nimport Back from \"../images/TrueRectangle.svg\"\r\n\r\nimport FalseBack from \"../images/FalseRectangle.svg\";\r\nimport { url } from \"inspector\";\r\n\r\ninterface IETrueFalseQuestion{\r\n    isTrue:boolean;\r\n    onChange:Function;\r\n}\r\n\r\n\r\nexport const TrueFalseQuestionWidget:react.FC<IETrueFalseQuestion> = (props) => {\r\n    const [active, setActive] = useState(props.isTrue);\r\n    console.log(active , \"active\")\r\n    props.onChange(active)\r\n    return <div className=\"true-false__main-container\">\r\n            <div className=\"true-false__container\">\r\n        <div className=\"true__container\" onClick={\r\n            () => {\r\n                setActive(true)\r\n            }\r\n        }>\r\n            <div className=\"true__content\">\r\n                <div className=\"true__word-content\" style={active ? {\r\n                    backgroundImage: `url(\"${Back}\")`,\r\n                    color: \"white\"\r\n                } : {}}>\r\n                    Правда\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        <div className=\"false__container\" onClick={\r\n            () => {\r\n                setActive(false)\r\n            }\r\n        }>\r\n            <div className=\"false__content\" style={ !active ? {\r\n                    backgroundImage: `url(\"${FalseBack}\")`,\r\n                    color: \"white\"\r\n                } : {}}>\r\n                Ложь\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"write-answer\">\r\n        Выбрано: {active ? \"Правда\" : \"Ложь\"}\r\n    </div>\r\n</div> \r\n    \r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\backLink.tsx",[],{"ruleId":"359","severity":1,"message":"360","line":1,"column":8,"nodeType":"361","messageId":"362","endLine":1,"endColumn":13},{"ruleId":"359","severity":1,"message":"363","line":5,"column":9,"nodeType":"361","messageId":"362","endLine":5,"endColumn":13},{"ruleId":"364","replacedBy":"365"},{"ruleId":"366","replacedBy":"367"},{"ruleId":"368","severity":1,"message":"369","line":7,"column":5,"nodeType":"361","messageId":"362","endLine":7,"endColumn":13},{"ruleId":"368","severity":1,"message":"370","line":18,"column":9,"nodeType":"361","messageId":"362","endLine":18,"endColumn":19},{"ruleId":"368","severity":1,"message":"371","line":20,"column":9,"nodeType":"361","messageId":"362","endLine":20,"endColumn":19},{"ruleId":"364","replacedBy":"365"},{"ruleId":"366","replacedBy":"367"},{"ruleId":"359","severity":1,"message":"372","line":7,"column":9,"nodeType":"361","messageId":"362","endLine":7,"endColumn":21},{"ruleId":"359","severity":1,"message":"373","line":22,"column":12,"nodeType":"361","messageId":"362","endLine":22,"endColumn":16},{"ruleId":"374","severity":1,"message":"375","line":25,"column":55,"nodeType":"376","messageId":"377","endLine":25,"endColumn":57},{"ruleId":"378","severity":1,"message":"379","line":41,"column":21,"nodeType":"380","endLine":41,"endColumn":35},{"ruleId":"378","severity":1,"message":"381","line":44,"column":21,"nodeType":"380","endLine":44,"endColumn":42},{"ruleId":"359","severity":1,"message":"382","line":54,"column":16,"nodeType":"361","messageId":"362","endLine":54,"endColumn":20},{"ruleId":"359","severity":1,"message":"383","line":54,"column":22,"nodeType":"361","messageId":"362","endLine":54,"endColumn":28},{"ruleId":"374","severity":1,"message":"375","line":60,"column":47,"nodeType":"376","messageId":"377","endLine":60,"endColumn":49},{"ruleId":"359","severity":1,"message":"384","line":7,"column":9,"nodeType":"361","messageId":"362","endLine":7,"endColumn":17},{"ruleId":"359","severity":1,"message":"385","line":8,"column":9,"nodeType":"361","messageId":"362","endLine":8,"endColumn":19},{"ruleId":"359","severity":1,"message":"386","line":12,"column":9,"nodeType":"361","messageId":"362","endLine":12,"endColumn":25},{"ruleId":"359","severity":1,"message":"387","line":28,"column":9,"nodeType":"361","messageId":"362","endLine":28,"endColumn":14},{"ruleId":"359","severity":1,"message":"388","line":43,"column":21,"nodeType":"361","messageId":"362","endLine":43,"endColumn":26},{"ruleId":"359","severity":1,"message":"389","line":17,"column":27,"nodeType":"361","messageId":"362","endLine":17,"endColumn":31},{"ruleId":"359","severity":1,"message":"390","line":16,"column":5,"nodeType":"361","messageId":"362","endLine":16,"endColumn":33},{"ruleId":"359","severity":1,"message":"391","line":1,"column":16,"nodeType":"361","messageId":"362","endLine":1,"endColumn":24},{"ruleId":"359","severity":1,"message":"392","line":2,"column":8,"nodeType":"361","messageId":"362","endLine":2,"endColumn":16},{"ruleId":"359","severity":1,"message":"393","line":5,"column":10,"nodeType":"361","messageId":"362","endLine":5,"endColumn":23},{"ruleId":"374","severity":1,"message":"375","line":25,"column":53,"nodeType":"376","messageId":"377","endLine":25,"endColumn":55},{"ruleId":"374","severity":1,"message":"375","line":27,"column":56,"nodeType":"376","messageId":"377","endLine":27,"endColumn":58},{"ruleId":"394","severity":1,"message":"395","line":33,"column":79,"nodeType":"380","endLine":33,"endColumn":99},{"ruleId":"359","severity":1,"message":"396","line":37,"column":11,"nodeType":"361","messageId":"362","endLine":37,"endColumn":23},{"ruleId":"359","severity":1,"message":"397","line":1,"column":10,"nodeType":"361","messageId":"362","endLine":1,"endColumn":14},{"ruleId":"359","severity":1,"message":"392","line":3,"column":8,"nodeType":"361","messageId":"362","endLine":3,"endColumn":16},{"ruleId":"374","severity":1,"message":"375","line":15,"column":47,"nodeType":"376","messageId":"377","endLine":15,"endColumn":49},{"ruleId":"374","severity":1,"message":"398","line":18,"column":42,"nodeType":"376","messageId":"377","endLine":18,"endColumn":44},{"ruleId":"359","severity":1,"message":"384","line":8,"column":5,"nodeType":"361","messageId":"362","endLine":8,"endColumn":13},{"ruleId":"359","severity":1,"message":"399","line":14,"column":9,"nodeType":"361","messageId":"362","endLine":14,"endColumn":25},{"ruleId":"359","severity":1,"message":"400","line":22,"column":11,"nodeType":"361","messageId":"362","endLine":22,"endColumn":20},{"ruleId":"359","severity":1,"message":"401","line":53,"column":9,"nodeType":"361","messageId":"362","endLine":53,"endColumn":10},{"ruleId":"359","severity":1,"message":"392","line":2,"column":8,"nodeType":"361","messageId":"362","endLine":2,"endColumn":16},{"ruleId":"359","severity":1,"message":"402","line":10,"column":10,"nodeType":"361","messageId":"362","endLine":10,"endColumn":17},{"ruleId":"374","severity":1,"message":"375","line":45,"column":51,"nodeType":"376","messageId":"377","endLine":45,"endColumn":53},{"ruleId":"374","severity":1,"message":"375","line":45,"column":101,"nodeType":"376","messageId":"377","endLine":45,"endColumn":103},{"ruleId":"374","severity":1,"message":"375","line":47,"column":40,"nodeType":"376","messageId":"377","endLine":47,"endColumn":42},{"ruleId":"374","severity":1,"message":"375","line":47,"column":68,"nodeType":"376","messageId":"377","endLine":47,"endColumn":70},{"ruleId":"394","severity":1,"message":"395","line":52,"column":13,"nodeType":"380","endLine":52,"endColumn":48},{"ruleId":"374","severity":1,"message":"375","line":82,"column":60,"nodeType":"376","messageId":"377","endLine":82,"endColumn":62},{"ruleId":"374","severity":1,"message":"375","line":88,"column":56,"nodeType":"376","messageId":"377","endLine":88,"endColumn":58},{"ruleId":"403","severity":1,"message":"404","line":88,"column":186,"nodeType":"376","messageId":"405","endLine":88,"endColumn":187},{"ruleId":"374","severity":1,"message":"375","line":89,"column":34,"nodeType":"376","messageId":"377","endLine":89,"endColumn":36},{"ruleId":"406","severity":1,"message":"407","line":93,"column":84,"nodeType":"408","endLine":93,"endColumn":96},{"ruleId":"374","severity":1,"message":"375","line":121,"column":60,"nodeType":"376","messageId":"377","endLine":121,"endColumn":62},{"ruleId":"374","severity":1,"message":"375","line":126,"column":58,"nodeType":"376","messageId":"377","endLine":126,"endColumn":60},{"ruleId":"374","severity":1,"message":"375","line":127,"column":221,"nodeType":"376","messageId":"377","endLine":127,"endColumn":223},{"ruleId":"409","severity":1,"message":"410","line":144,"column":18,"nodeType":"411","messageId":"412","endLine":144,"endColumn":29,"fix":"413"},{"ruleId":"359","severity":1,"message":"414","line":16,"column":10,"nodeType":"361","messageId":"362","endLine":16,"endColumn":16},{"ruleId":"359","severity":1,"message":"415","line":76,"column":12,"nodeType":"361","messageId":"362","endLine":76,"endColumn":16},{"ruleId":"359","severity":1,"message":"416","line":76,"column":18,"nodeType":"361","messageId":"362","endLine":76,"endColumn":25},{"ruleId":"374","severity":1,"message":"398","line":96,"column":36,"nodeType":"376","messageId":"377","endLine":96,"endColumn":38},{"ruleId":"359","severity":1,"message":"417","line":1,"column":28,"nodeType":"361","messageId":"362","endLine":1,"endColumn":35},{"ruleId":"359","severity":1,"message":"418","line":1,"column":59,"nodeType":"361","messageId":"362","endLine":1,"endColumn":68},{"ruleId":"359","severity":1,"message":"419","line":5,"column":9,"nodeType":"361","messageId":"362","endLine":5,"endColumn":15},{"ruleId":"359","severity":1,"message":"420","line":8,"column":8,"nodeType":"361","messageId":"362","endLine":8,"endColumn":14},{"ruleId":"359","severity":1,"message":"421","line":14,"column":5,"nodeType":"361","messageId":"362","endLine":14,"endColumn":27},{"ruleId":"359","severity":1,"message":"422","line":15,"column":5,"nodeType":"361","messageId":"362","endLine":15,"endColumn":21},{"ruleId":"359","severity":1,"message":"423","line":79,"column":10,"nodeType":"361","messageId":"362","endLine":79,"endColumn":27},{"ruleId":"359","severity":1,"message":"424","line":97,"column":12,"nodeType":"361","messageId":"362","endLine":97,"endColumn":15},{"ruleId":"359","severity":1,"message":"425","line":199,"column":12,"nodeType":"361","messageId":"362","endLine":199,"endColumn":27},{"ruleId":"359","severity":1,"message":"426","line":276,"column":12,"nodeType":"361","messageId":"362","endLine":276,"endColumn":22},{"ruleId":"359","severity":1,"message":"427","line":280,"column":18,"nodeType":"361","messageId":"362","endLine":280,"endColumn":25},{"ruleId":"359","severity":1,"message":"428","line":383,"column":12,"nodeType":"361","messageId":"362","endLine":383,"endColumn":19},{"ruleId":"359","severity":1,"message":"429","line":385,"column":10,"nodeType":"361","messageId":"362","endLine":385,"endColumn":19},{"ruleId":"359","severity":1,"message":"430","line":385,"column":21,"nodeType":"361","messageId":"362","endLine":385,"endColumn":33},{"ruleId":"374","severity":1,"message":"375","line":391,"column":30,"nodeType":"376","messageId":"377","endLine":391,"endColumn":32},{"ruleId":"374","severity":1,"message":"375","line":61,"column":30,"nodeType":"376","messageId":"377","endLine":61,"endColumn":32},{"ruleId":"374","severity":1,"message":"375","line":87,"column":31,"nodeType":"376","messageId":"377","endLine":87,"endColumn":33},{"ruleId":"374","severity":1,"message":"375","line":131,"column":18,"nodeType":"376","messageId":"377","endLine":131,"endColumn":20},{"ruleId":"368","severity":1,"message":"391","line":1,"column":27,"nodeType":"361","messageId":"362","endLine":1,"endColumn":35},{"ruleId":"374","severity":1,"message":"375","line":59,"column":49,"nodeType":"376","messageId":"377","endLine":59,"endColumn":51},{"ruleId":"359","severity":1,"message":"431","line":6,"column":5,"nodeType":"361","messageId":"362","endLine":6,"endColumn":21},{"ruleId":"359","severity":1,"message":"432","line":39,"column":10,"nodeType":"361","messageId":"362","endLine":39,"endColumn":24},{"ruleId":"359","severity":1,"message":"433","line":164,"column":11,"nodeType":"361","messageId":"362","endLine":164,"endColumn":38},{"ruleId":"374","severity":1,"message":"375","line":227,"column":45,"nodeType":"376","messageId":"377","endLine":227,"endColumn":47},{"ruleId":"394","severity":1,"message":"395","line":238,"column":25,"nodeType":"380","endLine":241,"endColumn":29},{"ruleId":"374","severity":1,"message":"398","line":240,"column":50,"nodeType":"376","messageId":"377","endLine":240,"endColumn":52},{"ruleId":"359","severity":1,"message":"434","line":255,"column":7,"nodeType":"361","messageId":"362","endLine":255,"endColumn":35},{"ruleId":"374","severity":1,"message":"375","line":258,"column":27,"nodeType":"376","messageId":"377","endLine":258,"endColumn":29},{"ruleId":"374","severity":1,"message":"375","line":317,"column":24,"nodeType":"376","messageId":"377","endLine":317,"endColumn":26},{"ruleId":"374","severity":1,"message":"375","line":318,"column":21,"nodeType":"376","messageId":"377","endLine":318,"endColumn":23},{"ruleId":"359","severity":1,"message":"435","line":345,"column":12,"nodeType":"361","messageId":"362","endLine":345,"endColumn":18},{"ruleId":"359","severity":1,"message":"436","line":345,"column":20,"nodeType":"361","messageId":"362","endLine":345,"endColumn":29},{"ruleId":"359","severity":1,"message":"437","line":349,"column":12,"nodeType":"361","messageId":"362","endLine":349,"endColumn":20},{"ruleId":"438","severity":1,"message":"439","line":428,"column":118,"nodeType":"440","messageId":"441","endLine":428,"endColumn":119,"suggestions":"442"},{"ruleId":"368","severity":1,"message":"443","line":9,"column":7,"nodeType":"361","messageId":"362","endLine":9,"endColumn":14},{"ruleId":"368","severity":1,"message":"444","line":49,"column":12,"nodeType":"361","messageId":"362","endLine":49,"endColumn":22},{"ruleId":"368","severity":1,"message":"445","line":53,"column":12,"nodeType":"361","messageId":"362","endLine":53,"endColumn":22},{"ruleId":"368","severity":1,"message":"446","line":70,"column":9,"nodeType":"361","messageId":"362","endLine":70,"endColumn":11},{"ruleId":"368","severity":1,"message":"443","line":72,"column":11,"nodeType":"361","messageId":"362","endLine":72,"endColumn":18},{"ruleId":"368","severity":1,"message":"447","line":73,"column":11,"nodeType":"361","messageId":"362","endLine":73,"endColumn":20},{"ruleId":"448","severity":1,"message":"410","line":81,"column":18,"nodeType":"411","messageId":"449","endLine":81,"endColumn":29},{"ruleId":"359","severity":1,"message":"450","line":10,"column":8,"nodeType":"361","messageId":"362","endLine":10,"endColumn":19},{"ruleId":"359","severity":1,"message":"451","line":14,"column":5,"nodeType":"361","messageId":"362","endLine":14,"endColumn":32},{"ruleId":"359","severity":1,"message":"372","line":21,"column":10,"nodeType":"361","messageId":"362","endLine":21,"endColumn":22},{"ruleId":"359","severity":1,"message":"452","line":120,"column":7,"nodeType":"361","messageId":"362","endLine":120,"endColumn":24},{"ruleId":"359","severity":1,"message":"453","line":122,"column":12,"nodeType":"361","messageId":"362","endLine":122,"endColumn":19},{"ruleId":"359","severity":1,"message":"389","line":122,"column":21,"nodeType":"361","messageId":"362","endLine":122,"endColumn":25},{"ruleId":"359","severity":1,"message":"454","line":173,"column":29,"nodeType":"361","messageId":"362","endLine":173,"endColumn":45},{"ruleId":"359","severity":1,"message":"455","line":1,"column":16,"nodeType":"361","messageId":"362","endLine":1,"endColumn":35},{"ruleId":"359","severity":1,"message":"391","line":1,"column":37,"nodeType":"361","messageId":"362","endLine":1,"endColumn":45},{"ruleId":"359","severity":1,"message":"392","line":2,"column":8,"nodeType":"361","messageId":"362","endLine":2,"endColumn":16},{"ruleId":"364","replacedBy":"456"},{"ruleId":"366","replacedBy":"457"},{"ruleId":"359","severity":1,"message":"391","line":2,"column":16,"nodeType":"361","messageId":"362","endLine":2,"endColumn":24},{"ruleId":"359","severity":1,"message":"458","line":3,"column":15,"nodeType":"361","messageId":"362","endLine":3,"endColumn":28},{"ruleId":"359","severity":1,"message":"372","line":7,"column":10,"nodeType":"361","messageId":"362","endLine":7,"endColumn":22},{"ruleId":"359","severity":1,"message":"459","line":8,"column":10,"nodeType":"361","messageId":"362","endLine":8,"endColumn":23},{"ruleId":"374","severity":1,"message":"375","line":45,"column":18,"nodeType":"376","messageId":"377","endLine":45,"endColumn":20},{"ruleId":"359","severity":1,"message":"460","line":13,"column":5,"nodeType":"361","messageId":"362","endLine":13,"endColumn":29},{"ruleId":"359","severity":1,"message":"461","line":23,"column":57,"nodeType":"361","messageId":"362","endLine":23,"endColumn":68},{"ruleId":"359","severity":1,"message":"462","line":29,"column":10,"nodeType":"361","messageId":"362","endLine":29,"endColumn":34},{"ruleId":"463","severity":1,"message":"464","line":230,"column":21,"nodeType":"465","messageId":"377","endLine":230,"endColumn":23},{"ruleId":"374","severity":1,"message":"375","line":276,"column":36,"nodeType":"376","messageId":"377","endLine":276,"endColumn":38},{"ruleId":"374","severity":1,"message":"375","line":39,"column":94,"nodeType":"376","messageId":"377","endLine":39,"endColumn":96},{"ruleId":"374","severity":1,"message":"375","line":48,"column":44,"nodeType":"376","messageId":"377","endLine":48,"endColumn":46},{"ruleId":"368","severity":1,"message":"466","line":18,"column":9,"nodeType":"361","messageId":"362","endLine":18,"endColumn":14},{"ruleId":"368","severity":1,"message":"467","line":20,"column":9,"nodeType":"361","messageId":"362","endLine":20,"endColumn":10},{"ruleId":"368","severity":1,"message":"360","line":1,"column":8,"nodeType":"361","messageId":"362","endLine":1,"endColumn":13},{"ruleId":"368","severity":1,"message":"468","line":2,"column":8,"nodeType":"361","messageId":"362","endLine":2,"endColumn":19},{"ruleId":"368","severity":1,"message":"389","line":10,"column":12,"nodeType":"361","messageId":"362","endLine":10,"endColumn":16},{"ruleId":"374","severity":1,"message":"375","line":28,"column":102,"nodeType":"376","messageId":"377","endLine":28,"endColumn":104},{"ruleId":"374","severity":1,"message":"375","line":30,"column":57,"nodeType":"376","messageId":"377","endLine":30,"endColumn":59},{"ruleId":"374","severity":1,"message":"375","line":32,"column":63,"nodeType":"376","messageId":"377","endLine":32,"endColumn":65},{"ruleId":"469","severity":1,"message":"470","line":37,"column":14,"nodeType":"361","messageId":"471","endLine":37,"endColumn":53},{"ruleId":"374","severity":1,"message":"375","line":42,"column":25,"nodeType":"376","messageId":"377","endLine":42,"endColumn":27},{"ruleId":"374","severity":1,"message":"375","line":46,"column":46,"nodeType":"376","messageId":"377","endLine":46,"endColumn":48},{"ruleId":"374","severity":1,"message":"375","line":52,"column":25,"nodeType":"376","messageId":"377","endLine":52,"endColumn":27},{"ruleId":"359","severity":1,"message":"472","line":8,"column":10,"nodeType":"361","messageId":"362","endLine":8,"endColumn":13},"@typescript-eslint/no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","no-native-reassign",["473"],"no-negated-in-lhs",["474"],"no-unused-vars","'Redirect' is defined but never used.","'ChildLobby' is defined but never used.","'checkToken' is defined but never used.","'DefaultInput' is defined but never used.","'path' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Login_inputs must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Registration_inputs must be in PascalCase or SCREAMING_SNAKE_CASE","'type' is assigned a value but never used.","'action' is assigned a value but never used.","'useQuery' is defined but never used.","'getUserOrg' is defined but never used.","'IEDataProcessing' is defined but never used.","'links' is assigned a value but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'GetTeacherClassesQueryResult' is defined but never used.","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'CSSProperties' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ToogleConfig' is defined but never used.","'type' is defined but never used.","Expected '!==' and instead saw '!='.","'subjectInfoQuery' is defined but never used.","'QueryData' is defined but never used.","'a' is assigned a value but never used.","'TaskRow' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","react/style-prop-object","Style prop value must be an object","JSXAttribute","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"475","text":"476"},"'create' is defined but never used.","'flag' is assigned a value but never used.","'setFlag' is assigned a value but never used.","'Context' is defined but never used.","'useEffect' is defined but never used.","'Editor' is defined but never used.","'client' is defined but never used.","'GetLessonsInfoDocument' is defined but never used.","'UserInfoDocument' is defined but never used.","'parseTeacherTests' is defined but never used.","'url' is assigned a value but never used.","'changeMaterials' is assigned a value but never used.","'createTest' is assigned a value but never used.","'setData' is assigned a value but never used.","'ignored' is assigned a value but never used.","'materials' is assigned a value but never used.","'setMaterials' is assigned a value but never used.","'useTaskTypeQuery' is defined but never used.","'ParseQuestions' is defined but never used.","'IEHandleExtendedWriteAnswer' is defined but never used.","'HandleSelectionThemeProvider' is assigned a value but never used.","'points' is assigned a value but never used.","'setPoints' is assigned a value but never used.","'typeName' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\d.","Literal","unnecessaryEscape",["477","478"],"'appRoot' is assigned a value but never used.","'handleShow' is defined but never used.","'handleHide' is defined but never used.","'el' is assigned a value but never used.","'modalRoot' is assigned a value but never used.","no-array-constructor","preferLiteral","'ReactPlayer' is defined but never used.","'useAnswerTeacherDetailQuery' is defined but never used.","'GetAnswerFunction' is assigned a value but never used.","'loading' is assigned a value but never used.","'getAnswerSheetId' is assigned a value but never used.","'useImperativeHandle' is defined but never used.",["473"],["474"],"'useRouteMatch' is defined but never used.","'DefaultButton' is defined but never used.","'AnswerTeacherDetailQuery' is defined but never used.","'useLocation' is defined but never used.","'printIntrospectionSchema' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'ttime' is assigned a value but never used.","'i' is assigned a value but never used.","'AudioWriter' is defined but never used.","@typescript-eslint/no-redeclare","'TaskTypeWidget' is already defined.","redeclared","'url' is defined but never used.","no-global-assign","no-unsafe-negation",[5534,5545],"[]",{"messageId":"479","fix":"480","desc":"481"},{"messageId":"482","fix":"483","desc":"484"},"removeEscape",{"range":"485","text":"486"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"487","text":"488"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[14383,14384],"",[14383,14383],"\\"]